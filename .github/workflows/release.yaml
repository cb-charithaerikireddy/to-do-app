name: Release
on:
  push:
    branches:
      - main
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  IMAGE_TAG: ${{ github.event.after }}
  ECR_REPOSITORY: intern/todo
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
jobs:
  release:
    name: Release Job
    runs-on: custom-runner
    container:
      image: 127322177288.dkr.ecr.us-west-1.amazonaws.com/cb-image:latest
      credentials:
        username: AWS
        password: ${{ secrets.AWS_ECR_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.2
      - name: Build with Maven
        run: mvn package -DskipTests
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build & Push Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          RELEASE_IMAGE: "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
        run: |
          docker build -t ${{ env.RELEASE_IMAGE }} .
          docker push ${{ env.RELEASE_IMAGE }}
          sed -i 's/ECR_IMAGE_TAG/${{ env.IMAGE_TAG }}/' k8s/app-deploy.yaml
      - name: Deploy MySql to Kubernetes cluster
        uses: kodermax/kubectl-aws-eks@master
        with:
          args: apply -f k8s/mysql-deploy.yaml
      - name: Deploy MySql to Kubernetes cluster
        uses: kodermax/kubectl-aws-eks@master
        with:
          args: apply -f k8s/mysql-service.yaml
      - name: Deploy to Kubernetes cluster
        uses: kodermax/kubectl-aws-eks@master
        with:
          args: apply -f k8s/app-deploy.yaml
      - name: Deploy to Kubernetes cluster
        uses: kodermax/kubectl-aws-eks@master
        with:
          args: apply -f k8s/app-service.yaml
